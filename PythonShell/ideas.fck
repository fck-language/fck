## This is a function that adds two numbers
def add(a,b){
  if a==1{
    return #Return statements can return nothing#
  }
  return a + b
}

print(add(1,2)) #This is an in-line comment#
log(add(1,2))
print("add(2,1) returns " + add(2,1) + " in the print method")
log("add(1,2) returns " + add(1,2) + " in the log method")

`nomath
`nolog

@loop iterate 10 :: i {
  while (3 < 5){
    if (i == 7){
      break @loop #This breaks out of a named loop#
    }
    elif (i == 3){
      break
    }
    else{
      ## This is a case statement
      case(i){
        option(1){
          log("i is 1")
        }
        option(9){
          print("this shouldn\'t happen")
          ## This will never be run, since the iterate loop called @loop stops when i is 7
        }
        default{ #This is like the 'else' of an if else statement#
          log(i)
        }
      }
    }
  }
}

silent<case> a :: case(5){}
a.new_option(3,log('3'))
a.new_option(5,print("yay"))
a.execute()
